<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="16" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG" duration-ms="116946" started-at="2019-07-23T11:04:00Z" finished-at="2019-07-23T11:05:57Z">
    <groups>
    </groups>
    <test name="features" duration-ms="116946" started-at="2019-07-23T11:04:00Z" finished-at="2019-07-23T11:05:57Z">
      <class name="TrainingPackage.InvocationCount">
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="0" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="9" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="login()[pri:0, instance:TrainingPackage.InvocationCount@7d417077]" name="login" duration-ms="5" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- TrainingPackage.InvocationCount -->
      <class name="TrainingPackage.TestNGFeatures">
        <test-method status="FAIL" signature="login()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb]" name="login" duration-ms="1" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at TrainingPackage.TestNGFeatures.login(TestNGFeatures.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="test2()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb]" name="test2" duration-ms="2" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb]" name="test3" duration-ms="3" started-at="2019-07-23T16:35:57Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="SKIP" signature="test1()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb]" name="test1" duration-ms="0" started-at="2019-07-23T16:35:57Z" depends-on-methods="TrainingPackage.TestNGFeatures.login" finished-at="2019-07-23T16:35:57Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNGFeatures.test1()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNGFeatures.test1()[pri:0, instance:TrainingPackage.TestNGFeatures@3f0ee7cb] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1039)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- TrainingPackage.TestNGFeatures -->
      <class name="TrainingPackage.Test2">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TrainingPackage.Test2@c818063]" name="beforeMethod" is-config="true" duration-ms="76442" started-at="2019-07-23T16:34:00Z" finished-at="2019-07-23T16:35:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="a()[pri:0, instance:TrainingPackage.Test2@c818063]" name="a" duration-ms="258" started-at="2019-07-23T16:35:16Z" finished-at="2019-07-23T16:35:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not matched expected [Welcome: Mercury] but found [Welcome: Mercury Tours]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not matched expected [Welcome: Mercury] but found [Welcome: Mercury Tours]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at TrainingPackage.Test2.a(Test2.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TrainingPackage.Test2@c818063]" name="afterMethod" is-config="true" duration-ms="10117" started-at="2019-07-23T16:35:17Z" finished-at="2019-07-23T16:35:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TrainingPackage.Test2@c818063]" name="beforeMethod" is-config="true" duration-ms="25220" started-at="2019-07-23T16:35:27Z" finished-at="2019-07-23T16:35:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="b()[pri:0, instance:TrainingPackage.Test2@c818063]" name="b" duration-ms="3497" started-at="2019-07-23T16:35:52Z" finished-at="2019-07-23T16:35:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TrainingPackage.Test2@c818063]" name="afterMethod" is-config="true" duration-ms="1038" started-at="2019-07-23T16:35:56Z" finished-at="2019-07-23T16:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TrainingPackage.Test2 -->
    </test> <!-- features -->
  </suite> <!-- TestNG -->
</testng-results>
